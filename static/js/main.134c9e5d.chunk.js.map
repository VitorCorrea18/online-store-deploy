{"version":3,"sources":["components/CategoryButton.js","services/addCart.js","components/ProductCard.js","services/api.js","components/CartButton.js","components/Header.js","pages/Home.js","components/ProductCardLarge.js","components/CheckoutBtn.js","components/KeepShoppingBtn.js","pages/Cart.js","pages/ProductDetails.js","pages/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["CategoryButton","handleClick","a","props","fetchProducts","category","id","this","data-testid","type","className","onClick","name","React","Component","adcCartItem","item","title","thumbnail","price","newItem","quantity","data","JSON","parse","localStorage","getItem","verifiedItens","verifyData","find","crrData","console","log","filterData","filter","verifyCart","setItem","stringify","ProductCard","product","to","src","alt","Math","round","toFixed","getCategories","fetch","request","json","response","getProductsFromCategoryAndQuery","categoryId","query","URLQuery","URLCategory","URLQueryCategory","CartButton","pathname","Header","Home","fetchCategories","categories","setState","handleChange","value","target","search","state","products","results","length","status","APIresult","map","key","onChange","ProductCardLarge","increaseQuantity","decreaseQuantity","checkoutPage","itemTotal","toString","defaultProps","CheckoutBtn","keepShoppingBtn","Cart","getCartItens","savedItens","newItens","crrItem","KeepShoppingBtn","ProductDetails","getData","dados","reviews","callDetails","match","params","resolve","handleSubmit","e","preventDefault","review","email","rating","comment","prevState","saveItem","onSubmit","htmlFor","placeholder","Checkout","savedItems","total","onSubmitButtonClick","hidden","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.134c9e5d.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nclass CategoryButton extends React.Component {\n  handleClick = async () => {\n    const { fetchProducts, category } = this.props;\n    await fetchProducts(category.id);\n  }\n\n  render() {\n    const { category } = this.props;\n    return (\n      <button\n        data-testid=\"category\"\n        type=\"button\"\n        className=\"category-button\"\n        onClick={ this.handleClick }\n      >\n        { category.name }\n      </button>\n    );\n  }\n}\n\nCategoryButton.propTypes = {\n  category: propTypes.shape({\n    name: propTypes.string.isRequired,\n    id: propTypes.string.isRequired,\n  }).isRequired,\n  fetchProducts: propTypes.func.isRequired,\n};\n\nexport default CategoryButton;\n","const verifyCart = (data, item) => {\n  const verifyData = data.find((crrData) => {\n    if (crrData.id === item.id) return crrData;\n    return false;\n  });\n  if (verifyData) {\n    console.log(verifyData);\n    verifyData.quantity += 1;\n    const filterData = data.filter((crrData) => crrData.id !== verifyData.id);\n    return [...filterData, verifyData];\n  }\n  return [...data, item];\n};\n\nconst adcCartItem = (item) => {\n  const { id, title, thumbnail, price } = item;\n  const newItem = { id, title, thumbnail, quantity: 1, price };\n  const data = JSON.parse(localStorage.getItem('cartItems'));\n  if (data) {\n    const verifiedItens = verifyCart(data, newItem);\n    localStorage.setItem('cartItems', JSON.stringify(verifiedItens));\n  } else {\n    localStorage.setItem('cartItems', JSON.stringify([{\n      id, title, thumbnail, quantity: 1, price }]));\n  }\n};\nexport default adcCartItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport adcCartItem from '../services/addCart';\n\nclass ProductCard extends React.Component {\n  render() {\n    const { thumbnail, price, title, id, product } = this.props;\n    return (\n      <div data-testid=\"product\" className=\"product-card\">\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ `/${id}` }\n          className=\"product-card__link\"\n        >\n          <div className=\"img-div\">\n            <img src={ thumbnail } alt={ title } />\n          </div>\n        </Link>\n        <div className=\"info-div\">\n          <Link\n            data-testid=\"product-detail-link\"\n            to={ `/${id}` }\n            className=\"product-card__link\"\n          >\n            <h2 data-testid=\"shopping-cart-product-name\">{title}</h2>\n          </Link>\n          <div className=\"price\">\n            <span>{`R$${(Math.round(price * 100) / 100).toFixed(2)}`}</span>\n            {\n              // função Math.round para mostrar sempre 2 decimais. Ex.. 1.70\n            }\n          </div>\n        </div>\n        <button\n          className=\"addCartBtn\"\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          onClick={ () => adcCartItem(product) }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  thumbnail: propTypes.string.isRequired,\n  price: propTypes.number.isRequired,\n  title: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  product: propTypes.instanceOf(Object).isRequired,\n};\n\nexport default ProductCard;\n","export async function getCategories() {\n  const URL = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const request = await fetch(URL);\n  const response = await request.json();\n\n  return response;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const URLQuery = `https://api.mercadolibre.com/sites/MLB/search?q=${query}`;\n  const URLCategory = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`;\n  const URLQueryCategory = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  let response = '';\n  if (!categoryId) response = await fetch(URLQuery);\n  if (!query) response = await fetch(URLCategory);\n  response = await fetch(URLQueryCategory);\n  return response.json();\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nclass CartButton extends React.Component {\n  render() {\n    // retirei a props savedItems pq passamos a salvar o carrinho no\n    // localStorage e não mais no estado. Mas ainda vale lembrar que\n    // é possivel passar props por Link.\n    return (\n      <Link\n        data-testid=\"shopping-cart-button\"\n        className=\"cart-link\"\n        to={ {\n          pathname: '/cart',\n        } }\n      >\n        <span>Carrinho</span>\n      </Link>\n\n    );\n  }\n}\n\nexport default CartButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CartButton from './CartButton';\nimport '../styles/header.css';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Link className=\"title\" to=\"/\">\n          <h1>Trybe Online Store</h1>\n        </Link>\n        <CartButton />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport CategoryButton from '../components/CategoryButton';\nimport ProductCard from '../components/ProductCard';\nimport {\n  getCategories,\n  getProductsFromCategoryAndQuery,\n} from '../services/api';\nimport Header from '../components/Header';\nimport '../styles/homePage.css';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      search: '',\n      APIresult: [],\n      status: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  fetchCategories = async () => {\n    const categories = await getCategories();\n    this.setState({ categories });\n  };\n\n  handleChange = async ({ target: { value } }) => {\n    this.setState({ search: value });\n  };\n\n  fetchProducts = async (id = '') => {\n    const { search } = this.state;\n    const products = await getProductsFromCategoryAndQuery(id, search);\n    if (products.results.length === 0) this.setState({ status: 'not found' });\n    else this.setState({ APIresult: products.results, status: '' });\n  };\n\n  render() {\n    const { categories, search, APIresult, status } = this.state;\n    return (\n      <>\n        <Header />\n        {\n          // Criei um componente para o Header, evitar reptir o código em cada página.\n          // mudei a ordem do aside aqui pra cima pra ajustar ele na esquerda da página.\n          // E por fim coloquei o resto em um section pra fazer o flex em relação ao aside.\n        }\n        {/* <header className=\"header\">\n          <div />\n          <h1 className=\"title\">Online Store</h1>\n          {/* Fonte: https://v5.reactrouter.com/web/api/Link */}\n        {/* É possível passar o state através do Link */}\n        <main className=\"home-page\">\n\n          <aside className=\"aside\">\n            <nav className=\"category-list\">\n              {categories.map((category) => (\n                <CategoryButton\n                  key={ category.id }\n                  category={ category }\n                  search={ search }\n                  fetchProducts={ this.fetchProducts }\n                />\n              ))}\n            </nav>\n          </aside>\n\n          <section className=\"main-section\">\n            <div className=\"search-div\">\n              <h1 data-testid=\"home-initial-message\">\n                Digite algum termo de pesquisa ou escolha uma categoria.\n              </h1>\n              <input\n                className=\"search-input\"\n                type=\"text\"\n                name=\"search\"\n                value={ search }\n                onChange={ this.handleChange }\n                data-testid=\"query-input\"\n              />\n              <button\n                className=\"search-button\"\n                type=\"button\"\n                onClick={ this.fetchProducts }\n                data-testid=\"query-button\"\n              >\n                Pesquisar\n              </button>\n            </div>\n\n            {status === 'not found' ? (\n              <span\n                className=\"not-found\"\n              >\n                Nenhum produto foi encontrado 😞\n              </span>\n            ) : (\n              <div className=\"product-section\">\n                {APIresult.map((product) => (\n                  <div key={ product.id }>\n                    <ProductCard\n                      price={ product.price }\n                      thumbnail={ product.thumbnail }\n                      title={ product.title }\n                      id={ product.id }\n                      product={ product }\n                    />\n                  </div>\n                ))}\n              </div>\n            )}\n          </section>\n\n        </main>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ProductCardLarge extends React.Component {\n  render() {\n    const {\n      product,\n      increaseQuantity,\n      decreaseQuantity,\n      checkoutPage,\n      itemTotal,\n    } = this.props;\n    const { thumbnail, price, title, id } = product;\n    return (\n      <main data-testid=\"product\" className=\"product-card-large\">\n\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ `/${id}` }\n          className=\"product-img-link\"\n        >\n          <img src={ thumbnail } alt={ title } />\n        </Link>\n\n        <section className=\"product-card-large__info\">\n\n          <Link\n            data-testid=\"product-detail-link\"\n            to={ `/${id}` }\n            className=\"title-link\"\n          >\n            <h2 data-testid=\"shopping-cart-product-name\">{title}</h2>\n          </Link>\n\n          {\n            // checkoutPage propType para exibir os botões de + e - apenas no cart\n            // pois este componente é usado no cart e no checkout page.\n            checkoutPage\n              ? (\n                <aside className=\"product-card-large__aside\">\n                  <span\n                    data-testid=\"shopping-cart-product-quantity\"\n                    className=\"__info--quantity\"\n                  >\n                    {`Qnt. ${product.quantity.toString()}`}\n                  </span>\n                  <span\n                    className=\"__info--price\"\n                  >\n                    {`R$${(Math.round(itemTotal * 100) / 100).toFixed(2)}`}\n                  </span>\n                </aside>\n              )\n              : (\n\n                <aside className=\"product-card-large__aside\">\n                  <div className=\"product-card-large__aside--div\">\n                    <button\n                      className=\"product-card-large__aside--button\"\n                      type=\"button\"\n                      data-testid=\"product-decrease-quantity\"\n                      onClick={ () => decreaseQuantity(product) }\n                    >\n                      -\n                    </button>\n                    <span\n                      data-testid=\"shopping-cart-product-quantity\"\n                      className=\"__info--quantity\"\n                    >\n                      {product.quantity.toString()}\n                    </span>\n                    <button\n                      className=\"product-card-large__aside--button\"\n                      type=\"button\"\n                      data-testid=\"product-increase-quantity\"\n                      onClick={ () => increaseQuantity(product) }\n                    >\n                      +\n                    </button>\n                    <span\n                      className=\"__info--price\"\n                    >\n                      {`R$${(Math.round(price * 100) / 100).toFixed(2)}`}\n                    </span>\n                  </div>\n                </aside>\n              )\n          }\n\n        </section>\n      </main>\n    );\n  }\n}\n\nProductCardLarge.propTypes = {\n  product: propTypes.instanceOf(Object).isRequired,\n  increaseQuantity: propTypes.func.isRequired,\n  decreaseQuantity: propTypes.func.isRequired,\n  checkoutPage: propTypes.bool.isRequired,\n  itemTotal: propTypes.number,\n};\n\nProductCardLarge.defaultProps = {\n  itemTotal: null,\n};\n\nexport default ProductCardLarge;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass CheckoutBtn extends React.Component {\n  render() {\n    return (\n      <Link to=\"/checkout\">\n        <button\n          data-testid=\"checkout-products\"\n          type=\"button\"\n          className=\"checkout-button\"\n        >\n          Finalizar Compra\n        </button>\n      </Link>\n    );\n  }\n}\n\nexport default CheckoutBtn;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass keepShoppingBtn extends React.Component {\n  render() {\n    return (\n      <Link to=\"/\" className=\"keep-Shopping-btn\">\n        Continuar Comprando\n      </Link>\n    );\n  }\n}\n\nexport default keepShoppingBtn;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Header from '../components/Header';\nimport ProductCardLarge from '../components/ProductCardLarge';\nimport CheckoutBtn from '../components/CheckoutBtn';\nimport KeepShoppingBtn from '../components/KeepShoppingBtn';\nimport '../styles/CartPage.css';\n\n// como o ProductCardLarge é usado tanto no checkout page como no cart page\n// fiz uma renderização condicional para os botões de controle de quantidade.\nconst CHECKOUT__PAGE = false;\n\nclass Cart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      savedItens: [],\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.length > 0) this.getCartItens();\n  }\n\n  getCartItens = () => {\n    const savedItens = JSON.parse(localStorage.getItem('cartItems'));\n    this.setState({ savedItens });\n  }\n\n  increaseQuantity = (product) => {\n    const { savedItens } = this.state;\n    const newItens = savedItens.map((crrItem) => {\n      if (crrItem.id === product.id) crrItem.quantity += 1;\n      return crrItem;\n    });\n    this.setState({ savedItens: newItens });\n    localStorage.setItem('cartItems', JSON.stringify(savedItens));\n  }\n\n  decreaseQuantity = (product) => {\n    const { savedItens } = this.state;\n    const newItens = savedItens.map((crrItem) => {\n      if (crrItem.id === product.id) crrItem.quantity -= 1;\n      return crrItem;\n    });\n    this.setState({ savedItens: newItens });\n    localStorage.setItem('cartItems', JSON.stringify(savedItens));\n  }\n\n  render() {\n    const { savedItens } = this.state;\n    return (\n      <>\n        <Header />\n        <main className=\"cart-page\">\n          <section className=\"cart-page__list-section\">\n            {savedItens.length === 0 ? (\n              <h1\n                data-testid=\"shopping-cart-empty-message\"\n                className=\"cart__not-found\"\n              >\n                Seu carrinho está vazio 😢\n              </h1>\n            ) : (\n              savedItens.map((product) => (\n                <div key={ product.id }>\n                  <ProductCardLarge\n                    price={ product.price }\n                    thumbnail={ product.thumbnail }\n                    title={ product.title }\n                    id={ product.id }\n                    product={ product }\n                    increaseQuantity={ this.increaseQuantity }\n                    decreaseQuantity={ this.decreaseQuantity }\n                    checkoutPage={ CHECKOUT__PAGE }\n                  />\n                  {\n                    // Criei um componente ProductCardLarge pra usar no carrinho\n                    // e joguei os botões lá dentro.\n                  }\n                </div>\n              ))\n            )}\n          </section>\n          {\n            savedItens.length !== 0 && (\n              <aside className=\"cart-page__aside\">\n                <span\n                  className=\"cart-page__aside--price\"\n                >\n                  Total: R$ xx,xx\n                </span>\n                <KeepShoppingBtn />\n                <CheckoutBtn />\n              </aside>\n            )\n          }\n        </main>\n      </>\n    );\n  }\n}\n\nCart.propTypes = {\n  location: propTypes.shape({\n    state: propTypes.shape({\n      savedItens: propTypes.arrayOf(propTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Cart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport adcCartItem from '../services/addCart';\nimport '../styles/productDetails.css';\n\nconst URL_BASIS = 'https://api.mercadolibre.com/items/';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      product: {},\n      email: '',\n      rating: '',\n      comment: '',\n      reviews: [],\n    };\n  }\n\n  componentDidMount() {\n    this.callDetails();\n    this.getData();\n  }\n\n  getData = () => {\n    const dados = JSON.parse(localStorage.getItem('reviews'));\n    if (dados) this.setState({ reviews: dados });\n  }\n\n   callDetails = async () => {\n     try {\n       const { match: { params: { id } } } = this.props;\n       const resolve = await fetch(`${URL_BASIS}${id}`);\n       const data = await resolve.json();\n       this.setState({\n         product: data,\n       });\n     } catch (error) {\n       console.log(error);\n     }\n   }\n\n   handleChange = ({ target }) => {\n     const { name, value } = target;\n     this.setState({\n       [name]: value,\n     });\n   };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, rating, comment } = this.state;\n    const review = { email, rating, comment };\n    this.setState((prevState) => ({\n      reviews: [...prevState.reviews, review],\n      email: '',\n      rating: '',\n      comment: '',\n    }), () => this.saveItem());\n  }\n\n  saveItem = () => {\n    const { reviews } = this.state;\n    localStorage.setItem('reviews', JSON.stringify(reviews));\n  }\n\n  render() {\n    // Fiz um componente para o Header, já que estavamos repetindo código\n    // em cada página é só chamar o Header.\n    const { product, email, comment, reviews } = this.state;\n    return (\n      <>\n        <Header />\n        <main className=\"details-page\">\n          <section className=\"details-page__container\">\n            <div className=\"__container--info\">\n              <h1\n                className=\"__container--info--name\"\n                data-testid=\"product-detail-name\"\n              >\n                {product.title}\n              </h1>\n              <img\n                src={ product.thumbnail }\n                alt={ product.title }\n                className=\"__container--info--image\"\n              />\n            </div>\n            <aside className=\"__container--aside\">\n              <span\n                className=\"__container--aside--price\"\n              >\n                {`R$ ${product.price}`}\n              </span>\n              <button\n                className=\"addCartBtn\"\n                type=\"button\"\n                data-testid=\"product-detail-add-to-cart\"\n                onClick={ () => adcCartItem(product) }\n              >\n                Adicionar ao Carrinho\n              </button>\n            </aside>\n          </section>\n          <form\n            onSubmit={ this.handleSubmit }\n            className=\"details-page__form\"\n          >\n            <h1>Deixe sua avaliação</h1>\n            <label\n              className=\"__form--label\"\n              htmlFor=\"email\"\n            >\n              E-mail\n              <input\n                className=\"__form--input\"\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"exemplo@exemplo.com\"\n                data-testid=\"product-detail-email\"\n                value={ email }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <div className=\"__form--rating\">\n              <input\n                name=\"rating\"\n                type=\"radio\"\n                value=\"1\"\n                data-testid=\"1-rating\"\n                onChange={ this.handleChange }\n              />\n              <input\n                name=\"rating\"\n                type=\"radio\"\n                value=\"2\"\n                data-testid=\"2-rating\"\n                onChange={ this.handleChange }\n              />\n              <input\n                name=\"rating\"\n                type=\"radio\"\n                value=\"3\"\n                data-testid=\"3-rating\"\n                onChange={ this.handleChange }\n              />\n              <input\n                name=\"rating\"\n                type=\"radio\"\n                value=\"4\"\n                data-testid=\"4-rating\"\n                onChange={ this.handleChange }\n              />\n              <input\n                name=\"rating\"\n                type=\"radio\"\n                value=\"5\"\n                data-testid=\"5-rating\"\n                onChange={ this.handleChange }\n              />\n            </div>\n            <label\n              htmlFor=\"comment\"\n              className=\"__form--label\"\n            >\n              Seu comentário\n              <textarea\n                id=\"comment\"\n                className=\"__form--textarea\"\n                name=\"comment\"\n                placeholder=\"Mensagem (opcional)\"\n                data-testid=\"product-detail-evaluation\"\n                value={ comment }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <button\n              type=\"submit\"\n              data-testid=\"submit-review-btn\"\n              className=\"__form--submmit-btn\"\n            >\n              Avaliar\n            </button>\n          </form>\n          <section className=\"details-page__review\">\n            {\n              (reviews.length > 0) && (\n                reviews.map((review) => (\n                  <div\n                    key={ review.email }\n                    className=\"__review--div\"\n                  >\n                    <h3>{review.email}</h3>\n                    <span className=\"--review-rating\">\n                      {`Nota: ${review.rating}`}\n                    </span>\n                    <span className=\"--review-comment\">{review.comment}</span>\n                  </div>\n                ))\n              )\n            }\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport Header from '../components/Header';\nimport ProductCardLarge from '../components/ProductCardLarge';\nimport KeepShoppingBtn from '../components/KeepShoppingBtn';\nimport '../styles/checkoutPage.css';\n\nconst CHECKOUT__PAGE = true;\n\nclass Checkout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      savedItems: [],\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.length > 0) this.getCartItens();\n  }\n\n  getCartItens = () => {\n    const savedItems = JSON.parse(localStorage.getItem('cartItems'));\n    this.setState({ savedItems });\n  }\n\n  render() {\n    const { savedItems } = this.state;\n    let total = 0;\n    return (\n      <>\n        <Header />\n        <main className=\"checkout-page__main\">\n          <section className=\"__main--content\">\n            <ul\n              className=\"checkoutPage__content--list\"\n            >\n              {\n                savedItems.map((crrItem) => {\n                  const itemTotal = crrItem.price * crrItem.quantity;\n                  total += itemTotal;\n                  return (\n                    <li\n                      key={ crrItem.id }\n                    >\n                      <ProductCardLarge\n                        thumbnail={ crrItem.thumbnail }\n                        price={ crrItem.price }\n                        title={ crrItem.title }\n                        id={ crrItem.id }\n                        product={ crrItem }\n                        checkoutPage={ CHECKOUT__PAGE }\n                        itemTotal={ itemTotal }\n                      />\n                    </li>\n                  );\n                })\n              }\n            </ul>\n            <aside className=\"__main--aside\">\n              <span\n                className=\"__main--total\"\n              >\n                {`R$${(Math.round(total * 100) / 100).toFixed(2)}`}\n              </span>\n              <KeepShoppingBtn />\n            </aside>\n          </section>\n          <form className=\"checkout-page__form\" onSubmit={ this.onSubmitButtonClick }>\n            <h2>Informações do Comprador</h2>\n            <div className=\"__form--personal-info\">\n              <input\n                data-testid=\"checkout-fullname\"\n                placeholder=\"Nome Completo\"\n                className=\"__form--input\"\n              />\n              <input\n                data-testid=\"checkout-email\"\n                placeholder=\"E-mail\"\n                className=\"__form--input\"\n              />\n              <input\n                data-testid=\"checkout-cpf\"\n                placeholder=\"CPF\"\n                className=\"__form--input\"\n              />\n              <input\n                data-testid=\"checkout-phone\"\n                placeholder=\"Telefone\"\n                className=\"__form--input\"\n              />\n              <input\n                data-testid=\"checkout-cep\"\n                placeholder=\"CEP\"\n                className=\"__form--input\"\n              />\n              <input\n                data-testid=\"checkout-address\"\n                placeholder=\"Endereço\"\n                className=\"__form--input\"\n              />\n            </div>\n            <select className=\"__form--select\">\n              <option value=\"\" hidden>Estado</option>\n              <option value=\"AM\">AM</option>\n              <option value=\"AP\">AP</option>\n              <option value=\"AC\">AC</option>\n              <option value=\"AL\">AL</option>\n              <option value=\"BA\">BA</option>\n              <option value=\"CE\">CE</option>\n              <option value=\"DF\">DF</option>\n              <option value=\"ES\">ES</option>\n              <option value=\"GO\">GO</option>\n              <option value=\"MA\">MA</option>\n              <option value=\"PI\">PI</option>\n              <option value=\"MG\">MG</option>\n              <option value=\"MT\">MT</option>\n              <option value=\"MS\">MS</option>\n              <option value=\"PA\">PA</option>\n              <option value=\"PB\">PB</option>\n              <option value=\"PE\">PE</option>\n              <option value=\"PR\">PR</option>\n              <option value=\"RJ\">RJ</option>\n              <option value=\"RO\">RO</option>\n              <option value=\"RR\">RR</option>\n              <option value=\"SE\">SE</option>\n              <option value=\"SP\">SP</option>\n              <option value=\"TO\">TO</option>\n              <option value=\"RN\">RN</option>\n              <option value=\"RS\">RS</option>\n              <option value=\"SC\">SC</option>\n            </select>\n            <fieldset className=\"__form--payment\">\n              <legend>Forma de pagamento</legend>\n              <input\n                type=\"radio\"\n                value=\"credito\"\n              />\n              <input\n                type=\"radio\"\n                value=\"debito\"\n              />\n              <input\n                type=\"radio\"\n                value=\"boleto\"\n              />\n            </fieldset>\n            <button\n              className=\"__form--purchase\"\n              type=\"submit\"\n            >\n              Finalizar Compra\n            </button>\n          </form>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\nimport ProductDetails from './pages/ProductDetails';\nimport Checkout from './pages/Checkout';\nimport './styles/productCardLarge.css';\nimport './styles/ProductCardDefault.css';\nimport './default.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/cart\" component={ Cart } />\n        <Route exact path=\"/checkout\" component={ Checkout } />\n        <Route exact path=\"/:id\" component={ ProductDetails } />\n        <Route exact path=\"/\" component={ Home } />\n        <Route path=\"*\" component={ Home } />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}